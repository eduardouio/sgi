from django.db import models
from suppliers.models import Supplier
from products.models import Product

class Order(models.Model):
    nro_pedido = models.CharField(primary_key=True, max_length=6)
    regimen = models.CharField(max_length=2, default='00')
    flete_aduana = models.DecimalField(max_digits=10, decimal_places=4)
    seguro_aduana = models.DecimalField(max_digits=10, decimal_places=4)
    incoterm = models.CharField(max_length=4)
    pais_origen = models.CharField(max_length=45, blank=True, null=True)
    ciudad_origen = models.CharField(max_length=45, blank=True, null=True)
    fecha_arribo = models.DateField(blank=True, null=True)
    dias_libres = models.PositiveIntegerField(default=21)
    fecha_salida_bodega_puerto = models.DateField(blank=True, null=True)
    fecha_ingreso_almacenera = models.DateField(blank=True, null=True)
    fecha_salida_almacenera = models.DateField(blank=True, null=True)
    comentarios = models.CharField(max_length=250, blank=True, null=True)
    observaciones = models.CharField(max_length=500, blank=True, null=True)
    nro_refrendo = models.CharField(max_length=22, blank=True, null=True)
    tipo_cambio_impuestosr10 = models.DecimalField(db_column='tipo_cambio_impuestosR10', max_digits=14, decimal_places=12, blank=True, null=True, default=1)
    tipo_cambio_almacenerar70 = models.DecimalField(db_column='tipo_cambio_almaceneraR70', max_digits=14, decimal_places=12, blank=True, null=True, default =1)
    otros = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    id_user = models.SmallIntegerField(default=0)
    date_create = models.DateTimeField(blank=True, null=True)
    last_update = models.DateTimeField(blank=True, null=True)
    bg_isclosed = models.IntegerField(blank=True, null=True, default=0)
    bg_haveexpenses = models.IntegerField(db_column='bg_haveExpenses', blank=True, null=True, default=0)
    have_etiquetas_fiscales = models.IntegerField(blank=True, null=True, default=0)
    exoneracion_arancel = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True, default=0)
    bg_have_tasa_control = models.IntegerField(blank=True, null=True, default=0)
    bg_isliquidated = models.IntegerField(blank=True, null=True, default=0)
    fodinfa = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    fodinfa_pagado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    ice_advalorem = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    ice_advalorem_pagado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    ice_especifico = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    ice_especifico_pagado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    iva = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    iva_pagado = models.DecimalField(max_digits=10, decimal_places=3, blank=True, null=True)
    arancel_especifico_pagar = models.DecimalField(max_digits=16, decimal_places=3, blank=True, null=True)
    arancel_especifico_pagar_pagado = models.DecimalField(max_digits=16, decimal_places=3, blank=True, null=True)
    fecha_liquidacion = models.DateField(blank=True, null=True)
    nro_liquidacion = models.CharField(max_length=12, blank=True, null=True)
    arancel_advalorem_pagar = models.DecimalField(max_digits=16, decimal_places=3, blank=True, null=True)
    arancel_advalorem_pagar_pagado = models.DecimalField(max_digits=16, decimal_places=0, blank=True, null=True)
    liquidacion_con_tasa = models.IntegerField(blank=True, null=True, default=0)
    base_arancel_advalorem = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    base_arancel_especifico = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    base_ice_especifico = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    base_ice_advalorem = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    porcentaje_ice_advalorem = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    base_iva = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    base_fodinfa = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    base_etiquetas = models.DecimalField(max_digits=16, decimal_places=3,blank=True, null=True, default=0)
    fecha_cierre = models.DateField(blank=True, null=True)
    id_user_cierre = models.PositiveSmallIntegerField(blank=True, null=True, default=0) 
    tipo_cambio_go = models.DecimalField(max_digits=12, decimal_places=2,blank=True, null=True, default=1)
    gasto_origen = models.DecimalField(max_digits=16, decimal_places=3, blank=True, null=True, default=0 )
    fecha_llegada_cliente = models.DateField(blank=True, null=True)
    notas_cierre = models.CharField(max_length=200, blank=True, null=True)
    fecha_salida_autorizada_puerto = models.DateTimeField(blank=True, null=True)
    bg_have_close_parcial = models.IntegerField(blank=True, null=True)
    docentry = models.IntegerField(blank=True, null=True)
    proveedor = models.CharField(max_length=100 ,blank=True, null=True)
    url_dai_1 = models.CharField(max_length=600, blank=True, null=True)
    url_dai_2 = models.CharField(max_length=600, blank=True, null=True)
    url_dai_3 = models.CharField(max_length=600, blank=True, null=True)
    path_dai_1 = models.FileField(upload_to='dai_pedido/',max_length=600, blank=True, null=True)
    path_dai_2 = models.FileField(upload_to='dai_pedido/',max_length=600, blank=True, null=True)
    path_dai_3 = models.FileField(upload_to='dai_pedido/',max_length=600, blank=True, null=True)

    def __str__(self):
        return ''.join([self.nro_pedido])

    class Meta:
        managed = False
        db_table = 'pedido'
        ordering = ['nro_pedido']
        verbose_name_plural = 'Pedidos'


class OrderInvoice(models.Model):
    id_pedido_factura = models.AutoField(primary_key=True)
    identificacion_proveedor = models.ForeignKey(Supplier, models.PROTECT, db_column='identificacion_proveedor')
    nro_pedido = models.ForeignKey(Order, models.PROTECT, db_column='nro_pedido')
    id_factura_proveedor = models.CharField(max_length=16)
    proveedor = models.CharField(max_length=100, blank=True, null=True)
    fecha_emision = models.DateField(blank=True, null=True)
    valor = models.DecimalField(max_digits=8, decimal_places=2, blank=True, null=True)
    moneda = models.CharField(max_length=45)
    tipo_cambio = models.DecimalField(max_digits=16, decimal_places=12)
    vencimiento_pago = models.DateField(blank=True, null=True)
    fecha_pago = models.DateField(blank=True, null=True)
    id_user = models.SmallIntegerField(default=0)
    date_create = models.DateTimeField(blank=True, null=True)
    last_update = models.DateTimeField(blank=True, null=True)
    bg_isclosed = models.IntegerField(blank=True, null=True,default=0)
    gasto_origen = models.DecimalField(max_digits=10, decimal_places=3,default=0)

    def __str__(self):
        return str(self.id_pedido_factura)

    class Meta:
        managed = False
        db_table = 'pedido_factura'
        unique_together = (('identificacion_proveedor', 'id_factura_proveedor'),)
        verbose_name_plural = 'Facturas de Pedido'


class OrderInvoiceDetail(models.Model):
    detalle_pedido_factura = models.AutoField(primary_key=True)
    id_pedido_factura = models.ForeignKey(OrderInvoice, models.PROTECT, db_column='id_pedido_factura')
    cod_contable = models.ForeignKey(Product, models.PROTECT, db_column='cod_contable')
    grado_alcoholico = models.FloatField(default=0)
    nro_cajas = models.SmallIntegerField(default=0)
    costo_caja = models.DecimalField(max_digits=16, decimal_places=10)
    id_user = models.SmallIntegerField(default=0)
    product = models.CharField(max_length=200, blank=True, null=True)
    nro_factura_informativa = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    cantidad_x_caja = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    cajas_importadas = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    unidades_importadas = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    unidades = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    costo_unidad = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    peso = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    capacidad_ml = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    fob = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    fob_percent = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    seguro_aduana = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    flete_aduana = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    seguro = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    flete = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    gasto_origen = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    cif = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    fecha_liquidacion = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    nro_pedido = models.CharField(max_length=10, blank=True, null=True)
    id_parcial = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    otros = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    prorrateo_parcial = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    prorrateo_pedido = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    prorrateos_total = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    tasa_control = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    fodinfa = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    iva = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    iva_unidad = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    iva_total = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ex_aduana = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ex_aduana_unitario = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    exaduana_sin_etiquetas = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    exaduana_sin_tasa = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    base_advalorem = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    base_ice_epecifico = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_especifico = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_especifico_unitario = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_advalorem = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_advalorem_sin_tasa = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_advalorem_sin_etiquetas = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_advalorem_unitario = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_especifico = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_advalorem = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_especifico_unitario = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_advalorem_unitario = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_especifico_liberado = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_advalorem_liberado = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_especifico_pagar = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    arancel_advalorem_pagar = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    etiquetas_fiscales = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_unitario = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    total_ice = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_advalorem_pagado = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ice_advalorem_diferencia = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    indirectos = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    costo_total = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    costo_caja_final = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    costo_botella = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    ex_aduana_antes = models.DecimalField(max_digits=12, decimal_places=3, blank=True, null=True)
    id_user = models.SmallIntegerField(default=0)
    date_create = models.DateTimeField(blank=True, null=True)
    last_update = models.DateTimeField(blank=True, null=True)

    def __str__(self):
        return str(self.detalle_pedido_factura)

    class Meta:
        managed = False
        db_table = 'detalle_pedido_factura'
        unique_together = (('id_pedido_factura', 'cod_contable', 'grado_alcoholico', 'date_create'),)
        ordering = ['id_pedido_factura','detalle_pedido_factura']
        verbose_name_plural = 'Detalle Facturas Pedido'